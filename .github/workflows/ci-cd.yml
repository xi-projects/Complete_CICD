name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up NodeJS 
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # Install NodeJS dependencies
      - name: Install NodeJS dependencies
        run: npm install

      # SonarQube Analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      # Docker Image Build
      - name: Build Docker Image
        run: |
          docker build -t actions-app:${{ github.sha}} .
          docker tag actions-app:${{ github.sha}} ${{ secrets.ECR_REPOSITORY_URI}}/actions-cicd:latest
          docker tag actions-app:${{ github.sha}} ${{ secrets.DOCKERHUB_USERNAME }}/actions-cicd:latest

      # Trivy Scan
      - name: Trivy Scan
        run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image actions-app:${{ github.sha}}
      
      # Set up AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      # Push image to Amazon ECR
      - name: Push image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI}}/actions-cicd:latest
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push image to DockerHub
      - name: Push image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/actions-cicd:latest

      # Update Kubeconfig
      - name: Update kubeconfig
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name actions-eks-cluster

      # Install kubectl
      - name: Install kubectl
        run: |
          curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      # Deploy to Amazon EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s-manifests/deployment.yaml
          kubectl apply -f k8s-manifests/service.yaml
